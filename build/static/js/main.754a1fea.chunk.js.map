{"version":3,"sources":["ProductContext.js","UserContext.js","components/AdminRow.js","components/ErrorMessage.js","components/SuccessMessage.js","components/AdminStore.js","components/Admin.js","components/ItemCard.js","components/Store.js","components/Cart.js","components/Shipped.js","components/Register.js","components/Login.js","components/Main.js","UserCartContext.js","App.js","reportWebVitals.js","index.js"],"names":["ProductContext","createContext","ProductProvider","props","useState","products","setProducts","Provider","value","children","UserContext","UserProvider","localStorage","getItem","token","setToken","useEffect","fetchUser","a","requestOptions","method","headers","Authorization","fetch","ok","to","setItem","AdminRow","id","title","description","price","handleDelete","onClick","className","ErrorMessage","message","style","textAlign","color","SuccessMessage","AdminStore","useContext","successMessage","setSuccessMessage","errorMessage","setErrorMessage","then","resp","console","log","json","results","response","data","detail","filteredProducts","filter","product","Table","striped","bordered","hover","map","Admin","productInfo","setProductInfo","urlInfo","setUrlInfo","updateForm","e","target","name","ReactS3Client","S3","bucketName","dirName","region","accessKeyId","process","secretAccessKey","s3Url","postData","url","preventDefault","body","JSON","stringify","Container","Card","Body","Form","onSubmit","Group","controlId","Label","Control","type","onChange","placeholder","uploadFile","files","location","catch","err","error","Button","marginTop","variant","ItemCard","addItem","width","p","overflow","h","Img","height","src","Title","Text","Store","item","index","Cart","totalItem","setTotalItem","rate","carts","setCarts","getCart","filteredcarts","calculateTotal","reduce","total","cart","pay","window","href","Row","Col","newItems","handleQuantityIncrease","handleQuantityDecrease","Shipped","ships","setShips","getShip","filteredships","alert","ship","Register","username","setUsername","email","setEmail","password","setPassword","confirm_password","setConfirm_password","submitRegisration","xs","length","for","required","class","Login","history","useHistory","submitLoginForm","access_token","push","Main","path","component","exact","UserCartContext","UserCartProvider","App","Navbar","bg","Nav","Link","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.754a1fea.chunk.js","sourcesContent":["import react, {useState, createContext} from 'react'\r\n\r\nexport const ProductContext = createContext();\r\n\r\nexport const ProductProvider = (props) => {\r\n    const [products, setProducts] = useState({\"data\": []});\r\n\r\n    return(\r\n        <ProductContext.Provider value = {[products, setProducts]}>\r\n            {props.children}\r\n        </ProductContext.Provider>\r\n    );\r\n\r\n}\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport{ Redirect} from \"react-router-dom\";\r\nexport const UserContext = createContext();\r\n\r\nexport const UserProvider = (props) => {\r\n  const [token, setToken] = useState(localStorage.getItem(\"passToken\"));\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const requestOptions = {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      };\r\n\r\n      const response = await fetch(\"http://localhost:8000/api/users/me\", requestOptions);\r\n\r\n      if (!response.ok) {\r\n        setToken(null);\r\n        return <Redirect to = '/'/>\r\n      }\r\n      localStorage.setItem(\"passToken\", token);\r\n    };\r\n    fetchUser();\r\n  }, [token]);\r\n\r\n  return (\r\n    <UserContext.Provider value={[token, setToken]}>\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};","import React from 'react';\r\n\r\n\r\n\r\nfunction AdminRow ({ id, title, description, price,  handleDelete}) {\r\n\t\treturn(\r\n\t\t\t<tr>\r\n\t\t\t\t<td>{id}</td>\r\n\t\t\t\t<td>{title}</td>\r\n\t\t\t\t<td>{description}</td>\r\n\t\t\t\t<td>{price}</td>\r\n                <td>\r\n                <button onClick={() => handleDelete(id)}  className = \"btn btn-outline-danger btn-sm mr-2\">Delete</button>\r\n            </td>\r\n            </tr>\r\n\r\n\t\t);\r\n\r\n\r\n}\r\nexport default AdminRow;","import react from 'react';\r\n\r\nconst ErrorMessage = ({message}) => (\r\n        <p style={{textAlign: 'center', color:'red'}}>{message}</p>\r\n);\r\n\r\nexport default ErrorMessage;","import react from 'react';\r\n\r\nconst SuccessMessage = ({message}) => (\r\n        <p style={{textAlign: 'center', color:'green'}}>{message}</p>\r\n);\r\n\r\nexport default SuccessMessage;","import react, {useEffect, useContext, useState} from 'react'\r\nimport { Table, Container, Row, Col } from 'react-bootstrap'\r\nimport {ProductContext} from '../ProductContext';\r\nimport AdminRow from './AdminRow';\r\nimport ErrorMessage from './ErrorMessage'\r\nimport SuccessMessage from './SuccessMessage'\r\nimport {UserContext} from '../UserContext';\r\n\r\n\r\nconst AdminStore = () => {\r\n    const [token] = useContext(UserContext);\r\n    const [successMessage, setSuccessMessage] = useState(\"\");\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [products, setProducts]  =  useContext(ProductContext)\r\n\r\n\r\n\r\n    useEffect( () => {\r\n        fetch('http://localhost:8000/allitems/?skip=0&limit=100')\r\n           .then(resp => {\r\n               console.log(resp)\r\n               return resp.json();\r\n        }).then(results => {\r\n            console.log(results)\r\n            setProducts({\"data\": [...results] })\r\n        })\r\n    }, [])\r\n    // console.log(products.data)\r\n\r\n    const handleDelete = async (id) => {\r\n        const requestOptions = {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"content-Type\": \"application/json\",\r\n                Authorization: \"Bearer \" + token,\r\n            },\r\n        };\r\n        const response = await fetch (\"http://localhost:8000/delete/admin/\" + id, requestOptions);\r\n        const data = await response.json()\r\n        console.log(data.detail)\r\n        if(!response.ok){\r\n            setErrorMessage(data.detail)\r\n        }else{\r\n            const filteredProducts = products.data.filter((product) => product.id !== id);\r\n            setProducts({ data: [...filteredProducts] })\r\n            setSuccessMessage(\"Items successfully Deleted\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n      return(\r\n            \r\n            \r\n                <div>\r\n                <ErrorMessage message={errorMessage}/>\r\n                <SuccessMessage message={successMessage}/>\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>id</th>\r\n                                <th>Product Name</th>\r\n                                <th>Product Description</th>\r\n                                <th>Unit Price</th>\r\n                                \r\n                                \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {products.data.map((product) => (\r\n                            <AdminRow\r\n                                    id = {product.id}\r\n                                    title = {product.title}\r\n                                    description = {product.description}\r\n                                    price = {product.price}\r\n                                    key={product.id}\r\n                                    handleDelete={handleDelete}\r\n                            />\r\n                        ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    </div>\r\n      );\r\n}\r\n\r\nexport default AdminStore;","import react, {useContext, useState } from 'react'\r\nimport { Form, Button, Card, Container, Row, Col} from 'react-bootstrap'\r\nimport AdminStore from './AdminStore'\r\nimport ErrorMessage from './ErrorMessage'\r\nimport SuccessMessage from './SuccessMessage'\r\nimport S3 from 'react-aws-s3';\r\nimport {UserContext} from '../UserContext';\r\n\r\n\r\n\r\nconst Admin = () => {\r\n    const [token] = useContext(UserContext);\r\n    const [successMessage, setSuccessMessage] = useState(\"\");\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [productInfo, setProductInfo] = useState(\r\n        {\r\n            title: \"\",\r\n            description: \"\",\r\n            price: \"\",\r\n        }\r\n    )\r\n    const [urlInfo, setUrlInfo] = useState (\"\");\r\n\r\n    const updateForm = (e) => {\r\n        setProductInfo(\r\n            {...productInfo, [e.target.name] : e.target.value}\r\n        )\r\n    }\r\n\r\n    const config ={\r\n        bucketName:\"storedev\",\r\n        dirName:\"Image\",\r\n        region:\"us-west-2\",\r\n        accessKeyId:process.env.REACT_APP_ACCESSKEYID,\r\n        secretAccessKey:process.env.REACT_APP_SECRETACCESSKEY,\r\n        s3Url:\"\"\r\n    }\r\n\r\n    const ReactS3Client = new S3(config)\r\n    const upload = (e) => {\r\n        ReactS3Client.uploadFile(e.target.files[0])\r\n        .then((data)=>{\r\n            console.log(data.location)\r\n            \r\n            setUrlInfo(data.location)\r\n        })\r\n\r\n        .catch(err => console.error(err))\r\n    }\r\n    \r\n    const postData = async (e) => {\r\n        console.log(productInfo.url)\r\n        e.preventDefault();\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"content-Type\": \"application/json\",\r\n                Authorization: \"Bearer \" + token,\r\n            },\r\n            body: JSON.stringify({\r\n                   \r\n                title: productInfo.title,\r\n                description: productInfo.description,\r\n                price: productInfo.price,\r\n                url:urlInfo,\r\n            }),\r\n        }\r\n\r\n        const response = await fetch (\"http://localhost:8000/admin/items/\", requestOptions);\r\n        const data = await response.json()\r\n        console.log(data.detail)\r\n        if(!response.ok){\r\n            setErrorMessage(data.detail)\r\n        }else{\r\n            setSuccessMessage(\"Items successfully Added\");\r\n            setProductInfo({\r\n                title: \"\",\r\n                description: \"\",\r\n                price: \"\",\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n    <Container>\r\n        <AdminStore>\r\n        </AdminStore>\r\n        <Card>\r\n            <Card.Body>\r\n                <Form onSubmit = {postData}>\r\n                    <Form.Group controlId=\"ProductName\">\r\n                        <Form.Label>Product Name</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"title\" \r\n                            value={productInfo.title} onChange = {updateForm} placeholder=\"Product title\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"Description\">\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"description\" value={productInfo.description} onChange = {updateForm}  placeholder=\"Description\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"UnitPrice\">\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control type=\"number\" name=\"price\" value={productInfo.price} onChange = {updateForm}  placeholder=\"Price\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"UploadFile\">\r\n                        <Form.Label>Upload Image</Form.Label>\r\n                        <Form.Control type=\"file\" name=\"url\" value = {productInfo.url} onChange ={upload}  placeholder=\"Upload Image\" />\r\n                    </Form.Group>\r\n\r\n                    <Button style={{marginTop:\"10px\"}} variant=\"primary\" type=\"submit\">\r\n                        Add to Store\r\n                    </Button>\r\n                    <ErrorMessage message={errorMessage}/>\r\n                    <SuccessMessage message={successMessage}/>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n    </Container>\r\n    );\r\n}\r\n\r\n\r\nexport default Admin;","import react, {useContext, useState} from 'react';\r\nimport { Card,Button } from 'react-bootstrap'\r\nimport {UserContext} from '../UserContext';\r\nimport ErrorMessage from './ErrorMessage';\r\nimport SuccessMessage from './SuccessMessage';\r\n\r\n\r\n\r\n\r\n\r\nconst ItemCard = (props) => {\r\n    const [token] = useContext(UserContext);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n    const addItem = async (title, price, url, description) => {\r\n        console.log(title, url, description, price  )\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers:{\r\n                \"content-Type\": \"application/json\",\r\n                Authorization: \"Bearer \" + token,\r\n            },\r\n            body: JSON.stringify({\r\n                title,\r\n                price,\r\n                url,\r\n                description,\r\n                \r\n             }),\r\n             \r\n        };\r\n        const response = await fetch (\"http://localhost:8000/user/item\", requestOptions);\r\n        const data = await response.json()\r\n        console.log(data)\r\n        if(!response.ok){\r\n            setErrorMessage(\"Something Went Wrong\")\r\n        }else{\r\n            setSuccessMessage(\"Item successfully Added To Cart\");\r\n     \r\n        }\r\n\r\n    };;\r\n\r\n    return(\r\n        <div className=\"col-11 col-md-6 col-lg-3 mx-0 mb-4\">\r\n         <ErrorMessage message={errorMessage}/>\r\n        <SuccessMessage message={successMessage}/>\r\n            <Card style={{ width: '18rem', p:0, overflow:'hidden', h:'100 shadow'}}>\r\n                    <Card.Img style={{height:\"200px\"}} variant=\"top\" src={props.url} />\r\n                    <Card.Body>\r\n                        <Card.Title>{props.title}</Card.Title>\r\n                        <Card.Text>{props.description}</Card.Text>\r\n                        <Card.Text>{props.price}</Card.Text>\r\n                        <Button variant=\"success\" onClick={()=>addItem(props.title, props.price, props.url, props.description) }>Add to Cart </Button>\r\n                    </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\nexport default ItemCard;","import react, {useEffect, useContext} from 'react'\r\nimport {ProductContext} from '../ProductContext';\r\nimport ItemCard from './ItemCard';\r\nimport {UserContext} from '../UserContext';\r\nimport{ Redirect} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Store = () => {\r\n    const[token]  = useContext(UserContext);\r\n\r\n    const [products, setProducts]  =  useContext(ProductContext)\r\n\r\n    useEffect( () => {\r\n        fetch('http://localhost:8000/allitems/?skip=0&limit=100')\r\n           .then(resp => {\r\n               console.log(resp)\r\n               return resp.json();\r\n        }).then(results => {\r\n            console.log(results)\r\n            setProducts({\"data\": [...results] })\r\n        })\r\n    }, [])\r\n    console.log(products.data)\r\n    if (token === \"null\" ){\r\n        return <Redirect to =\"/\"/>;\r\n    }\r\n\r\n      return(\r\n        \r\n            <section className=\"py-4 container\">\r\n                <div className = \"row justify-content-center\">\r\n                    {products.data.map((item, index) => (\r\n                                <ItemCard\r\n                                        id = {item.id}\r\n                                        title = {item.title}\r\n                                        description = {item.description}\r\n                                        price = {item.price}\r\n                                        url = {item.url}\r\n                                        key={index}\r\n                                        item={item}\r\n                                />\r\n                    ))}\r\n                </div>\r\n            </section>\r\n           \r\n        \r\n      \r\n         \r\n      );\r\n}\r\n\r\nexport default Store;","import react, {useEffect, useContext, useState} from 'react'\r\nimport { Table, Container, Row, Col } from 'react-bootstrap'\r\nimport './cart.css'\r\nimport {UserContext} from '../UserContext';\r\nimport ErrorMessage from './ErrorMessage';\r\nimport SuccessMessage from './SuccessMessage';\r\nimport{ Redirect} from \"react-router-dom\"\r\n\r\n\r\n\r\n\r\nconst Cart = () => {\r\n    const[token]  = useContext(UserContext);\r\n    const [totalItem, setTotalItem] = useState(0);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n    const [carts, setCarts]  =  useState([\r\n       { id:\"\",\r\n        title:\"\",\r\n        price: \"\",\r\n        rate: \"\",\r\n        url:\"\",\r\n        description:\"\",\r\n    }\r\n    ]);\r\n    \r\n    \r\n    useEffect( () => {    \r\n     const getCart = async () => {\r\n        const requestOptions = {\r\n            method: \"GET\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                Authorization: \"Bearer \" + token,\r\n            },\r\n        };\r\n            const response = await fetch('http://localhost:8000/items/?skip=0&limit=100', requestOptions);\r\n            if(!response.ok){\r\n                setErrorMessage(\"Session time out please re-login or Cart is empty\")\r\n            }else{\r\n               const data = await response.json();\r\n               setCarts([...data])\r\n               }\r\n        }\r\n        getCart();\r\n    }, [token])\r\n    const handleDelete = async (id) => {\r\n        const requestOptions = {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n                Authorization: \"Bearer \" + token,\r\n            },\r\n        };\r\n        const response = await fetch (\"http://localhost:8000/delete/\" + id, requestOptions);\r\n        console.log(response)\r\n        if(!response.ok){\r\n            setErrorMessage(\"Something Went Wrong Try Again\")\r\n        }else{\r\n            const filteredcarts = carts.filter((carts) => carts.id !== id);\r\n            setCarts([...filteredcarts])\r\n            setSuccessMessage(\"Item successfully Deleted\");\r\n        }\r\n\r\n    }\r\n      let handleQuantityIncrease = (index, price, rate) => {\r\n          let newItems = [...carts]\r\n          newItems[index].rate =(+price +  +rate);\r\n          setCarts(newItems);\r\n          calculateTotal();\r\n      }\r\n      const handleQuantityDecrease = (index, price, rate) => {\r\n        if (rate <= 0  ){\r\n            let newItems = [...carts]\r\n            newItems[index].rate = 0;\r\n            setCarts(newItems);\r\n\t\t}else{\r\n        let newItems = [...carts]\r\n        newItems[index].rate = rate - price;\r\n        setCarts(newItems);\r\n        calculateTotal();\r\n    }\r\n}\r\n\r\n     const calculateTotal = () => {\r\n         const totalItem = carts.reduce((total, cart) =>{\r\n             return total + cart.rate\r\n         }, 0);\r\n         setTotalItem(totalItem);\r\n        \r\n     }\r\n\r\n\r\n     const pay = async (id, title, price, rate, description, url) => {\r\n        console.log(rate)\r\n        if (rate < 1 ) {\r\n            setErrorMessage(\"Specify the amount you want to buy under the rate heading by pressing the plus/minus button\")\r\n        } else{\r\n            setErrorMessage(\"\")\r\n            const requestOptions = {\r\n                method: \"POST\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\",\r\n                    Authorization: \"Bearer \" + token,\r\n                    'cache-control':'no-cache',\r\n                },\r\n                body: JSON.stringify({\r\n                    title,\r\n                    price,\r\n                    rate,\r\n                    description,\r\n                    url,\r\n    \r\n                  \r\n                 }),\r\n             \r\n            };\r\n            const response = await fetch (\"http://localhost:8000/user/pay/item/{title}/{price}/{rate}/{description}/{url}\", requestOptions);\r\n            const data = await response.json() \r\n            console.log(data)\r\n            if(!response.ok){\r\n                setErrorMessage(\"Something Went Wrong\")\r\n            }else{\r\n                window.location.href = data\r\n                setSuccessMessage(\"PAYMENT IN PROGRESS\")\r\n        }\r\n    }\r\n        }\r\n       \r\n        // const shipped = carts.filter(carts => carts.rate > 1);\r\n        // console.log([...shipped]);\r\n       \r\n        if (token === 'null') {\r\n            return <Redirect to =\"/\"/>;\r\n        }\r\n       \r\n      return(\r\n          <div>\r\n            <Container>\r\n            <Row>\r\n                \r\n                <Col>\r\n                <ErrorMessage message={errorMessage}/>\r\n                <SuccessMessage message={successMessage}/>\r\n                    <Table striped bordered hover>\r\n                    \r\n                        <thead>\r\n                            \r\n                            <tr>\r\n                                <th>Image</th>\r\n                                <th>Product Name</th>\r\n                                <th>Product Description</th>\r\n                                <th>Unit Price</th>\r\n                                <th>Rate</th>    \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {carts.map((cart, index) => (\r\n                               <tr>\r\n                                   \r\n                                   <td ><img style={{height:\"100px\",width:\"100px\"}} src={cart.url}/></td>\r\n                                   <td>{cart.title}</td>\r\n                                   <td>{cart.description}</td>\r\n                                   <td>{cart.price}</td>\r\n                                   <td>{cart.rate}</td>\r\n                                   <td>\r\n                                   <button onClick={() => handleQuantityIncrease(index, cart.price, cart.rate)}  className = \"btn btn-outline-info btn-sm mr-2\">+</button>\r\n                                   <button onClick={() => handleQuantityDecrease(index, cart.price, cart.rate)}  className = \"btn btn-outline-info btn-sm mr-2\">-</button>\r\n                                   <button onClick={() => handleDelete(cart.id)}  className = \"btn btn-outline-danger btn-sm mr-2\">Delete</button> \r\n                                   <button  key={index} onClick={() => pay(cart.id,cart.title,cart.price, cart.rate, cart.description, cart.url)} className = \"btn btn-outline-info btn-sm mr-2\"> Pay </button>\r\n                                  </td>\r\n\r\n                               </tr>\r\n                    ))}\r\n                        </tbody>\r\n                        \r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n            <div>\r\n            \r\n                <h4>TOTAL: {totalItem} </h4> \r\n            </div>\r\n            </Container>\r\n            </div>\r\n\r\n         \r\n      );\r\n}\r\n\r\nexport default Cart;","import react, {useEffect, useContext, useState} from 'react'\r\nimport { Table, Container, Row, Col } from 'react-bootstrap'\r\nimport './cart.css'\r\nimport {UserContext} from '../UserContext';\r\nimport ErrorMessage from './ErrorMessage';\r\nimport SuccessMessage from './SuccessMessage';\r\nimport{ Redirect} from \"react-router-dom\"\r\n\r\n\r\n\r\n\r\nconst Shipped = () => {\r\n    const[token]  = useContext(UserContext);\r\n    const [successMessage, setSuccessMessage] = useState(\"\");\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [ships, setShips]  =  useState([\r\n       { id:\"\",\r\n        title:\"\",\r\n        price: \"\",\r\n        rate: \"\",\r\n        url:\"\",\r\n        description:\"\",\r\n    }\r\n    ]);\r\n    \r\n    \r\n    useEffect( () => {    \r\n     const getShip = async () => {\r\n        const requestOptions = {\r\n            method: \"GET\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                Authorization: \"Bearer \" + token,\r\n            },\r\n        };\r\n            const response = await fetch('http://localhost:8000/shipping/?skip=0&limit=100', requestOptions);\r\n            if(!response.ok){\r\n                setErrorMessage(\"Session time out please re-login or Cart is empty\")\r\n            }else{\r\n               const data = await response.json();\r\n               setShips([...data])\r\n               }\r\n        }\r\n        getShip();\r\n    }, [token])\r\n    const handleDelete = async (id) => {\r\n        const requestOptions = {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n                Authorization: \"Bearer \" + token,\r\n            },\r\n        };\r\n        const response = await fetch (\"http://localhost:8000/shipping/delete/\" + id, requestOptions);\r\n        console.log(response)\r\n        if(!response.ok){\r\n            setErrorMessage(\"Somethin Went Wrong Try Again\")\r\n        }else{\r\n            const filteredships = ships.filter((ships) => ships.id !== id);\r\n            setShips([...filteredships])\r\n            alert(\"Thank you for patronising us\")\r\n            setSuccessMessage(\"Items successfully Deleted\");\r\n        }\r\n\r\n    }\r\n     if (token === 'null') {\r\n            return <Redirect to =\"/\"/>;\r\n        }\r\n       \r\n      return(\r\n          <div>\r\n            <Container>\r\n            <Row>\r\n                \r\n                <Col>\r\n                <ErrorMessage message={errorMessage}/>\r\n                <SuccessMessage message={successMessage}/>\r\n                    <Table striped bordered hover>\r\n                    \r\n                        <thead>\r\n                            \r\n                            <tr>\r\n                                <th>Image</th>\r\n                                <th>Product Name</th>\r\n                                <th>Product Description</th>\r\n                                <th>Amount Paid</th>    \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {ships.map((ship, index) => (\r\n                               <tr>\r\n                                   \r\n                                   <td ><img style={{height:\"100px\",width:\"100px\"}} src={ship.url}/></td>\r\n                                   <td>{ship.title}</td>\r\n                                   <td>{ship.description}</td>\r\n                                   <td>{ship.rate}</td>\r\n                                   <td>\r\n                                   <button  key={index} onClick={() => handleDelete(ship.id)}  className = \"btn btn-outline-danger btn-sm mr-2\">Confirm Order Recieved</button> \r\n                                  </td>\r\n\r\n                               </tr>\r\n                    ))}\r\n                        </tbody>\r\n                        \r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n            <div>\r\n            </div>\r\n            </Container>\r\n            </div>\r\n\r\n         \r\n      );\r\n}\r\n\r\nexport default Shipped;","import react,{useState, useEffect, useContext} from 'react';\r\nimport {Container, Row, Col } from 'react-bootstrap';\r\nimport ErrorMessage from './ErrorMessage';\r\nimport {UserContext} from '../UserContext'\r\n\r\n\r\n\r\n\r\n\r\nconst Register = () => {\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [, setToken] = useContext(UserContext);\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirm_password, setConfirm_password] = useState(\"\");\r\n\r\n    const cleanFormData = ()=> {\r\n        setUsername(\"\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setConfirm_password(\"\");\r\n    };\r\n    const submitRegisration = async () => {\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n            },\r\n            body: JSON.stringify({\r\n                username:username,\r\n                email:email,\r\n                password:password\r\n            }),\r\n        };\r\n        const response = await fetch (`http://localhost:8000/signUp/${username}/${email}/${password}`, requestOptions);\r\n        const data = await response.json()\r\n        console.log(data)\r\n        if(!response.ok){\r\n            setErrorMessage(data.detail)\r\n        }else{\r\n            setErrorMessage(\"you have Successfully Register\");\r\n            cleanFormData();\r\n              \r\n         \r\n        }\r\n\r\n    }\r\n     const handleSubmit = (e) =>{\r\n         e.preventDefault();\r\n         if (password == confirm_password && password.length > 3){\r\n             submitRegisration();\r\n         }else{\r\n             setErrorMessage(\r\n                 \"Ensure that the password match and greater than 5 characters\"\r\n             );\r\n         }\r\n     };\r\n\r\n    return(\r\n    <Container>\r\n        <Row>\r\n            <Col ></Col>\r\n           \r\n            <Col xs={12} style={{ marginTop:\"50px\"}}>\r\n            <form onSubmit ={handleSubmit}>\r\n                <h1 style={{textAlign:\"center\"}}>Register</h1>\r\n                <p style={{textAlign:\"center\"}}>Please fill in this form to create an account.</p>\r\n                <hr/>\r\n                \r\n                <label for=\"username\"><b>Username</b></label>\r\n                <input type=\"text\" value={username} onChange={(e)=>setUsername(e.target.value)} placeholder=\"Enter Username\" name=\"username\" id=\"username\" required/>\r\n\r\n                <label for=\"email\"><b>Email</b></label>\r\n                <input type=\"text\" value={email} onChange={(e)=>setEmail(e.target.value)} placeholder=\"Enter Email\" name=\"email\" id=\"email\" required/>\r\n\r\n                <label for=\"psw\"><b>Password</b></label>\r\n                <input type=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)} placeholder=\"Enter Password\" name=\"password\" id=\"psw\" required/>\r\n\r\n                <label for=\"psw-repeat\"><b>Repeat Password</b></label>\r\n                <input type=\"password\" value={confirm_password} onChange={(e)=>setConfirm_password(e.target.value)} placeholder=\"Repeat Password\" name=\"confirm_password\" id=\"psw-repeat\" required/>\r\n                <hr/>\r\n                \r\n                <ErrorMessage message={errorMessage}/>\r\n                <Row>\r\n                    <Col></Col>\r\n                    <Col xs={2}><button type=\"submit\" class=\"registerbtn\">Register</button></Col>\r\n                    <Col></Col>\r\n                </Row>\r\n            \r\n\r\n            <div class=\"container signin\">\r\n                <p>Already have an account? <a href=\"/\">Sign in</a>.</p>\r\n            </div>\r\n        </form>\r\n        \r\n            </Col>\r\n            \r\n            <Col ></Col>\r\n        </Row>\r\n    </Container>   \r\n    );\r\n}\r\nexport default Register;","import react,{useState, useEffect, useContext} from 'react'\r\nimport ErrorMessage from './ErrorMessage';\r\nimport {UserContext} from '../UserContext';\r\nimport {Container, Row, Col } from 'react-bootstrap';\r\nimport {useHistory}  from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Login = () => {\r\n    let history = useHistory();\r\n   \r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [, setToken] = useContext(UserContext);\r\n    const [username, setUsername] = useState(\"\");\r\n    //const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    \r\n\r\n    const cleanFormData = ()=> {\r\n        setUsername(\"\");\r\n       // setEmail(\"\");\r\n        setPassword(\"\");\r\n       \r\n    };\r\n    const submitLoginForm = async () => {\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            headers: {\"Content-Type\": \"application/x-www-form-urlencoded\"},\r\n            body: JSON.stringify(\r\n                `grant_type=&username=${username}&password=${password}&scope=&client_id=&client_secret=`\r\n            ),\r\n        };\r\n        const response = await fetch (\"http://localhost:8000/token\", requestOptions);\r\n        const data = await response.json()\r\n        console.log(data)\r\n        if(!response.ok){\r\n            setErrorMessage(data.detail)\r\n        }else{\r\n            setErrorMessage(\"you have Successfully Login\");\r\n            cleanFormData();\r\n            setToken(data.access_token)\r\n            history.push('/store')\r\n            \r\n           \r\n              \r\n         \r\n        }\r\n\r\n    }\r\n     const handleSubmit = (e) =>{\r\n         e.preventDefault();\r\n         submitLoginForm();\r\n     };\r\n\r\n    return(\r\n    <Container>\r\n        <Row>\r\n            <Col></Col>\r\n            <Col xs={12} style={{ marginTop:\"50px\"}}>\r\n            <form onSubmit ={handleSubmit}>\r\n           \r\n                <h1  style={{textAlign:\"center\"}}>Login</h1>\r\n                <hr/>\r\n                \r\n                <label for=\"username\"><b>Username</b></label>\r\n                <input type=\"text\" value={username} onChange={(e)=>setUsername(e.target.value)} placeholder=\"Enter Username\" name=\"username\" id=\"username\" required/>\r\n\r\n                {/* <label for=\"email\"><b>Email</b></label>\r\n                <input type=\"text\" value={email} onChange={(e)=>setEmail(e.target.value)} placeholder=\"Enter Email\" name=\"email\" id=\"email\" required/> */}\r\n\r\n                <label for=\"psw\"><b>Password</b></label>\r\n                <input type=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)} placeholder=\"Enter Password\" name=\"password\" id=\"psw\" required/>\r\n\r\n                {/* <label for=\"psw-repeat\"><b>Repeat Password</b></label>\r\n                <input type=\"password\" value={confirm_password} onChange={(e)=>setConfirm_password(e.target.value)} placeholder=\"Repeat Password\" name=\"confirm_password\" id=\"psw-repeat\" required/> */}\r\n                <hr/>\r\n                \r\n                <ErrorMessage message={errorMessage}/>\r\n                {/* <p>By creating an account you agree to our <a href=\"#\">Terms & Privacy</a>.</p> */}\r\n               \r\n                <Row>\r\n                    <Col></Col>\r\n                    <Col xs={2}><button type=\"submit\" class=\"registerbtn\">Login</button></Col>\r\n                    <Col></Col>\r\n                </Row>\r\n            <div class=\"container signin\">\r\n                <p>Yet to have an account? <a href=\"Register\">Register</a>.</p>\r\n            </div>\r\n        </form>\r\n\r\n            </Col>\r\n            <Col></Col>\r\n        </Row>\r\n    </Container>\r\n      \r\n    );\r\n}\r\nexport default Login;","import React, {useContext} from \"react\";\r\nimport {ProductProvider} from '../ProductContext';\r\nimport {UserContext} from '../UserContext';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n Redirect,\r\n} from \"react-router-dom\";\r\nimport Admin from \"./Admin\";\r\nimport Store from \"./Store\";\r\nimport Cart from \"./Cart\";\r\nimport Shipped from \"./Shipped\";\r\nimport Register from \"./Register\"\r\nimport Login from \"./Login\";\r\n//import Logout from \"./Logout\";\r\n\r\n\r\nfunction Main() {\r\n  const[token]  = useContext(UserContext);\r\n\r\n    return(\r\n      \r\n       <Router>\r\n         <ProductProvider>\r\n          <Switch>\r\n              <Route path=\"/Admin\" component={Admin}/>\r\n              <Route path=\"/Store\" component={Store} />\r\n              <Route path=\"/Cart\" component={Cart}/>\r\n              <Route path=\"/Shipped\" component={Shipped}/>\r\n              <Route path=\"/Register\" component={Register}/>\r\n              <Route exact path=\"/\" component={Login}/>\r\n          </Switch>\r\n         </ProductProvider>\r\n    </Router>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n","import react, {useState, createContext} from 'react'\r\n\r\nexport const UserCartContext = createContext();\r\n\r\nexport const UserCartProvider = (props) => {\r\n    let [carts, setCarts] = useState({\"data\": []});\r\n\r\n    const increase = async (price) => {\r\n        //const newItems = [carts];\r\n       // newItems[id].cart.price++;\r\n        let rate = price + price\r\n        setCarts(rate)\r\n        console.log(rate)\r\n    }\r\n\r\n    return(\r\n        <UserCartContext.Provider value = {[carts, setCarts]}>\r\n            {props.children}\r\n        </UserCartContext.Provider>\r\n    );\r\n\r\n}\r\n","import React, {useState, useContext} from \"react\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navbar, Container, Nav, Badge } from 'react-bootstrap';\nimport Main from \"./components/Main\";\nimport {ProductProvider} from './ProductContext';\nimport {UserCartProvider} from './UserCartContext';\nimport {UserContext} from './UserContext';\nimport{ Redirect} from \"react-router-dom\";\n\n\n\n\nfunction App() {\n  const[token, setToken]  = useContext(UserContext);\n  const [products, setProducts] = useState({\"data\": []});\n\n const logout = () => {\n  localStorage.setItem(\"passToken\", 'null');\n    return <Redirect to = '/'/>\n\n  };\n  return (\n      <ProductProvider>\n      <UserCartProvider>\n        <Navbar bg=\"primary\" variant=\"dark\" className =\"nav-grid\">\n          <Container >\n                <Nav className=\"me-auto\">\n                     <Nav.Link href=\"Admin\" style={{color:'white'}}>Admin</Nav.Link>\n                     <Nav.Link href=\"Store\" style={{color:'white'}}>Store</Nav.Link>\n                     <Nav.Link href=\"Cart\" style={{color:'white'}}>Cart</Nav.Link>\n                    <Nav.Link href=\"Register\" style={{color:'white'}}>Register</Nav.Link>\n                    <Nav.Link href=\"/\" style={{color:'white'}}>Login</Nav.Link>\n\n              </Nav> \n              <Nav className=\"mr-auto\">            \n                <Nav.Link href=\"Shipped\" style={{color:'white'}}>Shipped</Nav.Link>\n                <Nav.Link href=\"/\" onClick={logout} style={{color:'white'}}>Logout</Nav.Link>\n\n              </Nav>\n            </Container>\n        </Navbar>\n  \n        <Main />\n        </UserCartProvider>\n      </ProductProvider>\n      \n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\nimport { UserProvider } from \"./UserContext\";\nimport { UserCartProvider } from \"./UserCartContext\";\n\n\nReactDOM.render(\n  <UserCartProvider>\n  <UserProvider>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n  </UserProvider>,\n  </UserCartProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}